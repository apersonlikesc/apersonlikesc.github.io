{"relevantArticles":[{"articleTitle":"如何设计出一个好的自走棋搭配算法","articleAbstractText":"这是应该会是一个递归的算法 方式是在x，y坐标轴上向某一个方向递归 （未完）","articleStatus":0,"articlePermalink":"/articles/2020/06/12/1591967204837.html","articleImg1URL":"https://b3logfile.com/bing/20171225.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"剑指Offer算法题 (1)","articleAbstractText":"剑指Offer的一些算法题目","articleStatus":0,"articlePermalink":"/articles/2019/08/08/1565226284855.html","articleImg1URL":"https://img.hacpai.com/bing/20180722.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"常见排序算法","articleAbstractText":"七个排序算法,冒泡排序,选择排序,快速排序,归并排序,堆排序,直接插入排序,希尔排序 🐹","articleStatus":0,"articlePermalink":"/articles/2019/07/24/1563976568637.html","articleImg1URL":"https://img.hacpai.com/bing/20181205.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"算法|随便刷刷LeetCode","articleAbstractText":"随便刷一刷算法题还是不错的,编程能力还需提高 🐼","articleStatus":0,"articlePermalink":"/articles/2019/08/18/1566125443482.html","articleImg1URL":"https://img.hacpai.com/bing/20190503.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Leetcode之排序(部分)","articleAbstractText":"导航: 快速排序 堆排序 桶排序 荷兰国旗问题 友情提示: 代码在这里 本文参照该仓库学习,大家可以star 快速选择 用于求解 Kth Element 问题，使用快速排序的 partition() 进行实现。 需要先打乱数组，否则最坏情况下时间复杂度为 O(N2)。 堆排序 用于求解 TopK Elements 问题，通过维护一个大小为 K 的堆，堆中的元素就是 TopK Elements。 堆排序也可以用于求解 Kth Element 问题，堆顶元素就是 Kth Element。 快速选择也可以求解 TopK Elements 问题，因为找到 Kth Element 之后，再遍历一次数组，所有小于等于 Kth Element 的元素都是 TopK Elements。 可以看到，快速选择和堆排序都可以求解 Kth Element 和 TopK Elements 问题。 排序 ：时间复杂度 O(NlogN)，空间复杂度 O(1) public int findKthLargest(int[] nums, int k) { Arrays.sort(nums); return nums[n....","articleStatus":0,"articlePermalink":"/articles/2019/04/15/1561009690183.html","articleImg1URL":"https://img.hacpai.com/bing/20181011.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}