{"relevantArticles":[{"articleTitle":"Bumblebee控制独显","articleAbstractText":"Bumblebee使用控制独显 安装: bumblebee - 提供守护进程以及程序的主要安装包。 mesa - 开源的 OpenGL 标准实现。 对于合适的NVIDIA驱动。 xf86-video-intel - Intel 驱动（可选）。 对于32位程序 (必须启用Multilib）在64位机器上的支持，安装: lib32-virtualgl - 为32位应用提供的渲染/显示桥。 lib32-nvidia-utils 或者 lib32-nvidia-340xx-utils（和64位对应）。 要使用Bumblebee，请确保添加你的用户到 bumblebee 组： gpasswd -a user bumblebee 并启用(enable) bumblebeed.service。之后重启系统 可以明显的感受到风扇转速下降 重启之后 测试 安装 mesa-demos并使用 glxgears 测试 Bumblebee 是否工作： optirun glxgears -info 看到有图形出现,并且风扇开始转动,独显开始工作,成功!!","articleStatus":0,"articlePermalink":"/articles/2018/08/16/1561009686130.html","articleImg1URL":"https://img.hacpai.com/bing/20180223.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Linux For Scratch Pass 4","articleAbstractText":"安装基本系统软件过程(重点过程) 部分在中文版中没有,取自英文版 Linux-4.15.3 API Headers Linux API 头文件（在 linux-3.19.tar.xz 里）会将内核 API 导出给 Glibc 使用。 Linux 内核需要提供一个应用编程接口（API）供系统的 C 库（LFS 中的 Glibc）调用。这通过整理 Linux 内核源码包中的多个 C 头文件来完成。 确保在之前的动作里没有留下旧文件和依赖关系： make mrproper 现在要从源代码里解压出用户需要的内核头文件。因为解压过程会删除目标目录下所有文件，所以我们会先输出到一个本地中间目录后再拷贝到需要的地方。而且里面还有一些隐藏文件是给内核开发人员用的，而 LFS 不需要，所以会将它们从中间目录里删除。 make INSTALL_HDR_PATH=dest headers_install find dest/include ( -name .install -o -name ..install.cmd ) -delete cp -rv dest/include/* /usr/includ\u2026.","articleStatus":0,"articlePermalink":"/articles/2018/07/18/1561009689987.html","articleImg1URL":"https://img.hacpai.com/bing/20190413.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Linux From Scrach Pass 2","articleAbstractText":"编译临时工具软件包过程 说明:主要列出重要信息(来自官方),切忌不要按照本文编译 我只是把它们列出来加深理解,还有一些配置我没有列出 包括make与make install Binutils-2.25 - Pass 1 Binutils 软件包包括了一个链接器、汇编器 和 其它处理目标文件 的工具。 ../binutils-2.25/configure \\ \u2013prefix=/tools \\ \u2013with-sysroot=$LFS \\ \u2013with-lib-path=/tools/lib \\ \u2013target=$LFS_TGT \\ \u2013disable-nls \\ \u2013disable-werror 配置选项的含义： \u2013prefix=/tools 告诉配置脚本将 Binutils 程序安装到 /tools 文件夹。 \u2013with-sysroot=$LFS 用于交叉编译，告诉编译系统在 $LFS 中查找所需的目标系统库。 \u2013with-lib-path=/tools/lib 指定需要配置使用的链接器的库路径。 \u2013target=$LFS_TGT (这个还不是很清楚) 因为 \u2026.","articleStatus":0,"articlePermalink":"/articles/2018/07/14/1561009688844.html","articleImg1URL":"https://img.hacpai.com/bing/20180308.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Linux For Scratch Pass 5","articleAbstractText":"System V is the classic boot process that has been used in Unix and Unix-like systems such as Linux since about 1983.It consists of a small program, init, that sets up basic programs such as login (via getty) and runs a script. This script, usually named rc, controls the execution of a set of additional scripts that perform the tasks required to initialize the system. The init program is controlled by the /etc/inittab file and is organized into run levels that can be run by the user: 0 \u2014 halt 1 ....","articleStatus":0,"articlePermalink":"/articles/2018/07/25/1561009687301.html","articleImg1URL":"https://img.hacpai.com/bing/20180307.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"tar基础","articleAbstractText":"记录: 来自网上 1、.tar 用 tar -xvf 解压 2、.gz 用 gzip -d或者gunzip 解压 3、.tar.gz和.tgz 用 tar -xzf 解压 4、.bz2 用 bzip2 -d或者用bunzip2 解压 5、.tar.bz2用tar -xjf 解压 6、.Z 用 uncompress 解压 7、.tar.Z 用tar -xZf 解压 8、.rar 用 unrar e解压 9、.zip 用 unzip 解压 我一般解压都是直接使用tar -xvf xxx 这样比较省事吧 (=\\ _ \\ =) 然后压缩就是直接使用 tar -cvf xxx 了 加入有大小需求的话,我会考虑加上z,j之类的","articleStatus":0,"articlePermalink":"/articles/2018/07/14/1561009684338.html","articleImg1URL":"https://img.hacpai.com/bing/20190120.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}